Plate2_TP.standards  <- Plate2.TP %>% dplyr::filter(Sample.Type %in% c('Standard', 'Blank'))
(nrow(Plate2_TP.samples) +
# nrow(Plate2_TP.blanks) +
nrow(Plate2_TP.standards)) == nrow(Plate2.TP) # sanity check, must be true
# assign known BCA values to standard IDs A-I
BCA_standards <- rbind(Plate1_TP.standards, Plate2_TP.standards) %>%
dplyr::mutate(BCA_ug_mL = case_when(Standards %in% 'A' ~ 2000,
Standards %in% 'B' ~ 1500,
Standards %in% 'C' ~ 1000,
Standards %in% 'D' ~ 750,
Standards %in% 'E' ~ 500,
Standards %in% 'F' ~ 250,
Standards %in% 'G' ~ 125,
Standards %in% 'H' ~ 25,
Standards %in% 'I' ~ 0)) %>%
dplyr::select(Plate, Standards, BCA_ug_mL, Abs_562nm)
# Run standard curve, calculate totalprotein
BCA_background_zero <- BCA_standards %>%
dplyr::filter(Standards %in% 'I') %>% # the zero standard
dplyr::group_by(Plate, Standards, BCA_ug_mL) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
# Plate 1, blank to correct by is 0.1215
# Plate 2, blank to correct by is 0.1198
# Absorbance corrected - take the mean of any duplicates
BCA_standards_means <- BCA_standards %>%
dplyr::filter(!BCA_ug_mL %in% 0) %>%
dplyr::mutate(Abs_562nm_cor =
case_when(Plate == 1 ~ (Abs_562nm-0.1215),
Plate == 2 ~ (Abs_562nm-0.1198) ) ) %>%
dplyr::select(-Abs_562nm) %>%
dplyr::group_by(Plate, Standards, BCA_ug_mL) %>% # group by to get the means
dplyr::summarise_each(funs(mean,sd,se=sd(.)/sqrt(n()))) # get all the stats
# plot it insert the quadratic formaula using ggpmisc
BCA_stand_plots_quadratic <- BCA_standards_means %>%
# QUADRATIC SMOOTH LINE WORKS BEST HERE (MANUFACTURERS INSTRUCTIONS)
# dplyr::filter(!(Plate %in% 2 & Standards %in% 'D')) %>% # hash me out to test
ggplot(aes(y=mean, x=BCA_ug_mL)) +
geom_point() +
theme_bw() +
labs(y= "Net Abs 562nm", x = "Protein Concentration in ug/mL") +
#geom_line() +
#stat_poly_line(color='red') +
#geom_smooth() +
stat_smooth(method = "lm", formula = y ~ x + I(x^2), size = 1) +
stat_poly_eq(parse=T, aes(label = ..eq.label..), formula=y ~ x + I(x^2)) +
ggtitle('Total protein: Quadratic curve') +
#stat_poly_eq(use_label(c("eq", "R2"))) +
facet_wrap(~Plate)
# output
pdf(paste("Output/Colorimetric_assays/Succinate/Standard_Curve_BCA_Succinatecorrection.pdf", sep =''),
width=10,
height=7)
print(ggarrange(BCA_stand_plots_quadratic))
dev.off()
library(grDevices)
# Standard curve, Plate 1 equation y = -0.0189 + 0.00101x - 7.71x10^-8x^2 - need to solve for x!
# Standard curve, Plate 2 equation y = --0.0189 + 0.00196x - 4.42x10^-7x^2 - need to solve for x!
# Standard curve, Plate 1
a1 <- -8.96*10^-8
b1 <- 0.00128
c1 <- 0.0352
# EQ: (-(b1) + sqrt( (b1^2) - (4*(((a1)-Abs_562nm_cor))*(c1)) ))/(2*a1)
# Standard curve, Plate 2
a2 <- -1.47*10^-7
b2 <- 0.00142
c2 <- 0.0147
# EQ: (-(b2) + sqrt( (b2^2) - (4*a2*(c2-Abs_562nm_cor)) ) ) / (2*a2)
# linear equation plate 1 == (Abs_562nm_cor - 0.192)/0.000993
# linear equation plate 2 == (Abs_562nm_cor - 0.224)/0.000911
# IMPORTANT! we used 25 ul of the standards and 25 ul of the unknowns (samples)
# therefore we can interpret the unknown direct to the the standard curve without having
# to account for addition factors, fot example, if we used 5 ul unknown (sample) we would have to adjust
# by multiplying by 5 to reach the standard curve
V = 0.025 # 25 ul or 0.025 mL
# Again, remember Plate 1, blank to correct by is 0.1372
# Again, remember Plate 2, blank to correct by is 0.1312
# Sanity check Lets look at the absorbance vs. totla protein concentration data
TotalProtein_final <- rbind(Plate1_TP.samples, Plate2_TP.samples) %>%
dplyr::select(Plate,Tank.Number,Temperature.Number,Abs_562nm) %>%
# dplyr::filter(!Abs_562nm > 3.99) %>% # data as 4.00 is above the detection limit, omit
dplyr::mutate(Unique_ID =
paste0('Plate',Plate,'_',
'Tank',Tank.Number, '_',
'Temperature', Temperature.Number)) %>% # unique ID t0 group by
dplyr::mutate(Abs_562nm_cor = # correct the raw abs, subtract background
case_when(Plate == 1 ~ (Abs_562nm-0.1215), # for plate 1
Plate == 2 ~ (Abs_562nm-0.1198) ) ) %>% # for plate 2
dplyr::mutate(TotalProtein_ug_mL =
case_when(
# linear fr neg discrim. - luckily only two values from plate 2
# Scallop_ID %in% c(33, 51) ~
#   ((Abs_562nm_cor - 0.224)/0.000911),
# quadratic for Plate 1
Plate == 1 ~
((-(b1) + sqrt( (b1^2) - (4*a1*(c1-Abs_562nm_cor)) ) ) / (2*a1)),
# quadratic for plate 2
Plate == 2 ~
((-(b2) + sqrt( (b2^2) - (4*a2*(c2-Abs_562nm_cor)) ) ) / (2*a2)) ),
# ug per mL concentration to ug in 25 ul sample
TotalProtein_ug = TotalProtein_ug_mL*V)
# View(TotalProtein_final)
nrow(TotalProtein_final) # 138
# NOTE! I found that some of my discriminants are negative (b^2 - 4ac) IN PLATE 2!! (as 'NaN)
# so Im going to extrapolate from a linear regression curve based on the final samples
# first lets plot absorbance and actual concentration calacuated
calc_BCA_plot <- TotalProtein_final %>%
ggplot(aes(y = Abs_562nm_cor,
x  = TotalProtein_ug_mL)) +
geom_point() +
theme_bw() +
ggtitle('Total protein: Calculated BCA by Net Absorbance') +
facet_wrap(~Plate)
calc_BCA_plot
#print
pdf(paste("Output/Colorimetric_assays/Succinate/Standard_Curve_BCA_Succcorrection.pdf", sep =''),
width=10,
height=14)
ggpubr::ggarrange(BCA_stand_plots_quadratic,
calc_BCA_plot,
nrow = 2)
dev.off()
# write csv
write.csv(TotalProtein_final, file = "Output/Colorimetric_assays/Succinate/TotalProteinBCA_Succcorrection.csv")
# Plate 1 means - then calc DA412 = (A412)final – (A412)initial
Plate1.blanks.means  <- aggregate(Plate1.blanks[, 10], list(Plate1.blanks$About), mean) %>%
dplyr::rename(Abs_570nm = x)
Plate1.blanks
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
Plate1.standards
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# Plate 1 means - then calc DA412 = (A412)final – (A412)initial
Plate1.blanks <- Plate1.standards %>% dplyr::filter(Sample.Type %in% 'Blank')
Plate1.blanks.means  <- aggregate(Plate1.blanks[, 10], list(Plate1.blanks$About), mean) %>%
dplyr::rename(Abs_570nm = x)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# Plate 2 means - then calc DA412 = (A412)final – (A412)initial
Plate2.blanks <- Plate2.standards %>% dplyr::filter(Sample.Type %in% 'Blank')
Plate2.blanks.means <-  aggregate(Plate2.blanks[, 10], list(Plate2.blanks$About), mean) %>%
dplyr::rename(Abs_570nm = x)
Plate2.blanks.means
Plate1.blanks.means
Plate1.standards.sub <- Plate1.standards %>%
dplyr::mutate(Abs_570nm_sub =
case_when((About == 'no dilution' & Standards > 0) ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% 'no dilution'))$Abs_570nm,
(About == '5x dilution post' & Standards > 0) ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% '5x dilution post'))$Abs_570nm,
(About == '5x dilution post 30 mins' & Standards > 0) ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% '5x dilution post 30 mins'))$Abs_570nm,
Standards == 0 ~ 0
))
Plate1.samples.sub <- Plate1.samples %>%
dplyr::mutate(Abs_570nm_sub =
case_when(About == 'no dilution' ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% 'no dilution'))$Abs_570nm,
About == '5x dilution post' ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% '5x dilution post'))$Abs_570nm,
About == '5x dilution post 30 mins' ~ Abs_570nm -
(Plate1.blanks.means %>% filter(Group.1 %in% '5x dilution post 30 mins'))$Abs_570nm
))
Plate2.standards.sub <- Plate2.standards %>%
dplyr::mutate(Abs_570nm_sub =
case_when(Standards > 0 ~ Abs_570nm - Plate2.blanks.means$Abs_570nm,
Standards == 0 ~ 0
))
Plate2.samples.sub <- Plate2.samples %>%
dplyr::mutate(Abs_570nm_sub = Abs_570nm - Plate2.blanks.means$Abs_570nm)
# Plate 1
Plate1_standard_curve <- Plate1.standards.sub %>%
dplyr::select(Standards, Abs_570nm_sub, About) %>%
# dplyr::filter(Time_min %in% 30) %>%
dplyr::group_by(Standards, About) %>%
dplyr::summarise(meanAbs = mean(Abs_570nm_sub),
sdAbs   = sd(Abs_570nm_sub),
n = n()) %>%
ggplot(aes(x = as.numeric(Standards), y = as.numeric(meanAbs))) +
geom_point() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
theme_bw() +
xlab('known uM Succinate') +
ylab('Abs at 570 nm') +
facet_wrap(~About)
# Plate 2
Plate2_standard_curve <- Plate2.standards.sub %>%
dplyr::select(Standards, Abs_570nm_sub, About) %>%
# dplyr::filter(Time_min %in% 30) %>%
dplyr::group_by(Standards, About) %>%
dplyr::summarise(meanAbs = mean(Abs_570nm_sub),
sdAbs   = sd(Abs_570nm_sub),
n = n()) %>%
ggplot(aes(x = as.numeric(Standards), y = as.numeric(meanAbs))) +
geom_point() +
stat_poly_line() +
stat_poly_eq(use_label(c("eq", "R2"))) +
theme_bw() +
xlab('known uM Succinate') +
ylab('Abs at 570 nm') +
facet_wrap(~About)
ggarrange(Plate1_standard_curve,
Plate2_standard_curve,
nrow=2)
plate1_slope_5x    = 62.2
plate1_slope_10x   = 58.7
plate1_slope_10x30 = 74.7
Plate_1_Succinate  <- Plate1.samples %>%
# dplyr::filter(Time_min %in% c(0,20,25,30)) %>%
dplyr::select(Temperature.Number, Tank.Number, Volume, Abs_570nm, About) %>%
dplyr::mutate(Unique_ID =
paste0('Plate',1,'_',
'Tank',Tank.Number, '_',
'Temperature', Temperature.Number)) %>% # unique ID t0 group by
dplyr::group_by(Temperature.Number, Tank.Number, Unique_ID, About) %>%
dplyr::summarise(meanAbs = mean(Abs_570nm)) %>%
pivot_wider(names_from = About, values_from = meanAbs) %>%
dplyr::rename("meanAbs_5xpre"     = "no dilution",
"meanAbs_10xpost"   = "5x dilution post",
"meanAbs_10xpost30" ="5x dilution post 30 mins") %>%
dplyr::mutate(meanAbs_5xpre_Calc      = (meanAbs_5xpre * 5) / plate1_slope_5x,
meanAbs_10xpost_Calc    = (meanAbs_10xpost * 10) / plate1_slope_10x,
meanAbs_10xpost30_Calc  = (meanAbs_10xpost30 * 10) / plate1_slope_10x30,
Treatment = case_when(Tank.Number %in% c(1:7) ~ 'Ambient',
Tank.Number %in% c(8:14) ~ 'Heated'))
Plate_1_Succinate_per.g.protein <- merge(Plate_1_Succinate, TotalProtein_final,
by = c('Unique_ID','Temperature.Number', 'Tank.Number')) %>%
# TotalProtein_ug is the amount of proetin in 25 ul of homogenate
# correct for the volume in the Succiante sample, in all cases we used 20 ul of the homogenate
# to measure Succinate
dplyr::mutate(Succinate_per_ug_protein_5xpre =
meanAbs_5xpre_Calc / (TotalProtein_ug_mL*(20/1000)),
Succinate_per_ug_protein_10xpost =
meanAbs_10xpost_Calc / (TotalProtein_ug_mL*(20/1000)),
Succinate_per_ug_protein_10xpost30 =
meanAbs_10xpost30_Calc / (TotalProtein_ug_mL*(20/1000)),
) %>%
# filter(!Cs_Activty_per_ug_protein < 0) %>%
dplyr::select(Temperature.Number,
Tank.Number,
Treatment,
TotalProtein_ug_mL,
Succinate_per_ug_protein_5xpre,
Succinate_per_ug_protein_10xpost,
Succinate_per_ug_protein_10xpost30
) %>%
dplyr::group_by(Temperature.Number, Tank.Number, Treatment) %>%
dplyr::summarise(meanTotalProtein_ug_mL = mean(TotalProtein_ug_mL),
meanSuccinate_per_ug_protein_5xpre = mean(Succinate_per_ug_protein_5xpre),
meanSuccinate_per_ug_protein_10xpost = mean(Succinate_per_ug_protein_10xpost),
meanSuccinate_per_ug_protein_10xpost30 = mean(Succinate_per_ug_protein_10xpost30))
plate2_slope_10xpre   = 63.3
Plate_2_Succinate  <- Plate2.samples %>%
# dplyr::filter(Time_min %in% c(0,20,25,30)) %>%
dplyr::select(Temperature.Number, Tank.Number, Volume, Abs_570nm, About) %>%
dplyr::mutate(Unique_ID =
paste0('Plate',2,'_',
'Tank',Tank.Number, '_',
'Temperature', Temperature.Number)) %>% # unique ID t0 group by
dplyr::group_by(Temperature.Number, Tank.Number, Unique_ID, About) %>%
dplyr::summarise(meanAbs = mean(Abs_570nm))  %>%
dplyr::mutate(meanAbs_10xpre_Calc      = (meanAbs * 10) / plate2_slope_10xpre,
Treatment = case_when(Tank.Number %in% c(1:7) ~ 'Ambient',
Tank.Number %in% c(8:14) ~ 'Heated'))
Plate_2_Succinate_per.g.protein <- merge(Plate_2_Succinate, TotalProtein_final,
by = c('Unique_ID','Temperature.Number', 'Tank.Number')) %>%
# TotalProtein_ug is the amount of proetin in 25 ul of homogenate
# correct for the volume in the Succiante sample, in all cases we used 20 ul of the homogenate
# to measure Succinate
dplyr::mutate(Succinate_per_ug_protein_10xpre =
meanAbs_10xpre_Calc / (TotalProtein_ug_mL*(20/1000))
) %>%
# filter(!Cs_Activty_per_ug_protein < 0) %>%
dplyr::select(Temperature.Number,
Tank.Number,
Treatment,
TotalProtein_ug_mL,
Succinate_per_ug_protein_10xpre
) %>%
dplyr::group_by(Temperature.Number, Tank.Number, Treatment) %>%
dplyr::summarise(meanTotalProtein_ug_mL = mean(TotalProtein_ug_mL),
meanSuccinate_per_ug_protein_10xpre = mean(Succinate_per_ug_protein_10xpre))
### master table
Master_Table <- plyr::rbind.fill(Plate_1_Succinate_per.g.protein, Plate_2_Succinate_per.g.protein) %>%
# dplyr::filter(!meanCs_Activity_ug_protein < 0) %>%
dplyr::mutate(Temperature = case_when(
Temperature.Number == 1 & Treatment %in% 'Heated' ~ "22",
Temperature.Number == 2 & Treatment %in% 'Heated' ~ "26",
Temperature.Number == 3 & Treatment %in% 'Heated' ~ "30",
Temperature.Number == 4 & Treatment %in% 'Heated' ~ "34",
Temperature.Number == 5 & Treatment %in% 'Heated' ~ "36",
Temperature.Number == 1 & Treatment %in% 'Ambient' ~ "22_t1",
Temperature.Number == 2 & Treatment %in% 'Ambient' ~ "22_t2",
Temperature.Number == 3 & Treatment %in% 'Ambient' ~ "22_t3",
Temperature.Number == 4 & Treatment %in% 'Ambient' ~ "22_t4",
Temperature.Number == 5 & Treatment %in% 'Ambient' ~ "22_t5",
)) %>%
dplyr::rename(Timepoint = Temperature.Number)
# plot all data above 0
Plot_MeanSE <- Master_Table %>%
dplyr::filter(!meanSuccinate_per_ug_protein_5xpre > 350) %>%
# dplyr::filter(!meanSuccinate_per_ug_protein_10xpre > 600) %>%
ggplot(aes(x = as.factor(Temperature),
y = meanSuccinate_per_ug_protein_5xpre,
# y = meanSuccinate_per_ug_protein_10xpre,
color=Treatment,
group=Treatment)) +
scale_colour_manual(breaks=c("Ambient", "Heated"),
values=c("forestgreen","orange")) +
geom_point(aes(colour = Treatment),
position = position_dodge2(width = 0.4)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 0.4)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 10.4)) +
labs(title="uM Succinate",
x ="Temperature",
y = expression("Succinate"~(~uM^{-1}*~ug~protein^{-1}))) + #"CS activity per g protein") +
# scale_x_discrete(labels=c("22", "26", "30" , "34", "36")) +
# scale_y_continuous(expand = c(0, 0), limits = c(0, 0.00035),
# breaks = seq(0, 0.00035, by = 0.00007)) +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title =element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=10),
plot.title = element_text(size=12),
legend.position="none") +
facet_wrap(~Treatment, scales= "free_x")
Plot_MeanSE
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# plot all data above 0 - omit outliers and present only the heated treatment
Plot_MeanSE_ambient <- Master_Table %>%
dplyr::filter(!meanSuccinate_per_ug_protein_5xpre > 350)  %>%
ggplot(aes(x = as.factor(Temperature),
y = meanSuccinate_per_ug_protein_5xpre,
color=Treatment)) +
scale_colour_manual(breaks=("Ambient"),
values=("forestgreen")) +
geom_point(aes(colour = Treatment),
position = position_dodge2(width = 0.4)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 0.4)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 10.4)) +
labs(title="uM Succinate",
x ="Temperature",
y = expression("Succinate"~(~uM^{-1}*~ug~protein^{-1}))) + #"CS activity per g protein") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title =element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=10),
plot.title = element_text(size=12),
legend.position="none")
Plot_MeanSE_ambient
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# plot all data above 0 - omit outliers and present only the heated treatment
Plot_MeanSE_ambient <- Master_Table %>%
dplyr::filter(!(Treatment %in% 'Heated'))
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# plot all data above 0 - omit outliers and present only the heated treatment
Plot_MeanSE_ambient <- Master_Table %>%
dplyr::filter(!(Treatment %in% 'Heated')) %>%
dplyr::filter(!meanSuccinate_per_ug_protein_5xpre > 350)  %>%
ggplot(aes(x = as.factor(Temperature),
y = meanSuccinate_per_ug_protein_5xpre,
color=Treatment)) +
scale_colour_manual(breaks=("Ambient"),
values=("forestgreen")) +
geom_point(aes(colour = Treatment),
position = position_dodge2(width = 0.4)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 0.4)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 10.4)) +
labs(title="uM Succinate",
x ="Temperature",
y = expression("Succinate"~(~uM^{-1}*~ug~protein^{-1}))) + #"CS activity per g protein") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title =element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=10),
plot.title = element_text(size=12),
legend.position="none")
Plot_MeanSE_ambient
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# plot all data above 0 - omit outliers and present only the heated treatment
Plot_MeanSE_heated<- Master_Table %>%
dplyr::filter(!(Treatment %in% 'Ambient')) %>%
dplyr::filter(!meanSuccinate_per_ug_protein_5xpre > 350)  %>%
ggplot(aes(x = as.factor(Temperature),
y = meanSuccinate_per_ug_protein_5xpre,
color=Treatment)) +
scale_colour_manual(breaks=("Ambient"),
values=("orange")) +
geom_point(aes(colour = Treatment),
position = position_dodge2(width = 0.4)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 0.4)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 10.4)) +
labs(title="uM Succinate",
x ="Temperature",
y = expression("Succinate"~(~uM^{-1}*~ug~protein^{-1}))) + #"CS activity per g protein") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title =element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=10),
plot.title = element_text(size=12),
legend.position="none")
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
ggarrange(Plot_MeanSE_ambient, Plot_MeanSE_heated)
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
# plot all data above 0 - omit outliers and present only the heated treatment
Plot_MeanSE_heated<- Master_Table %>%
dplyr::filter(!(Treatment %in% 'Ambient')) %>%
dplyr::filter(!meanSuccinate_per_ug_protein_5xpre > 350)  %>%
ggplot(aes(x = as.factor(Temperature),
y = meanSuccinate_per_ug_protein_5xpre,
color=Treatment)) +
scale_colour_manual(breaks=("Heated"),
values=("orange")) +
geom_point(aes(colour = Treatment),
position = position_dodge2(width = 0.4)) +
stat_summary(fun.y="mean", size = 0.8, color = "black",
position = position_dodge2(width = 0.4)) +
stat_summary(fun.min = function(x) mean(x) - sd(x)/sqrt(length(x)),
fun.max = function(x) mean(x) + sd(x)/sqrt(length(x)),
geom = 'errorbar', width = 0.25, size = 1,
position = position_dodge2(width = 10.4)) +
labs(title="uM Succinate",
x ="Temperature",
y = expression("Succinate"~(~uM^{-1}*~ug~protein^{-1}))) + #"CS activity per g protein") +
theme_classic() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.title =element_text(size=12),
axis.text.x = element_text(angle = 0, vjust = 0.5, hjust=1),
axis.text=element_text(size=10),
plot.title = element_text(size=12),
legend.position="none")
ggarrange(Plot_MeanSE_ambient, Plot_MeanSE_heated)
pdf(paste("Output/Colorimetric_assays/Succinate/Succinate_AmbinetvHeated.pdf", sep =''),
width=10,
height=4)
ggarrange(Plot_MeanSE)
dev.off()
pdf(paste("Output/Colorimetric_assays/Succinate/Succinate_AmbinetvHeated.pdf", sep =''),
width=10,
height=4)
ggarrange(Plot_MeanSE)
dev.off()
Plot_MeanSE_heated
knitr::opts_chunk$set(echo = TRUE)
# SET WORKING DIRECTORY
# knitr::opts_knit$set(root.dir = "C:/Users/katherine.mcfarland/Documents/GitHub/EAD-ASEB-Cvirginica_Thermal_Performance/larvae") # Katie's
knitr::opts_knit$set(root.dir = "C:/Users/samjg/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's
#knitr::opts_knit$set(root.dir = "C:/Users/samuel.gurr/Documents/Github_repositories/EAD-ASEB-Cvirginica_Thermal_Performance/RAnalysis") # Sam's work
pdf(paste("Output/Colorimetric_assays/Succinate/Succinate_AmbinetvHeated.pdf", sep =''),
width=10,
height=4)
ggarrange(Plot_MeanSE_ambient, Plot_MeanSE_heated)
dev.off()
